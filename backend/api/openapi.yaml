components:
  schemas:
    CreateTinyURLBodyBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - http://localhost:6500/api/v1/schemas/CreateTinyURLBodyBody.json
          format: uri
          readOnly: true
          type: string
        url:
          description: URL to shorten
          examples:
            - http://example.com
          type: string
      required:
        - url
      type: object
    CreateTinyURLResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - http://localhost:6500/api/v1/schemas/CreateTinyURLResponseBody.json
          format: uri
          readOnly: true
          type: string
        id:
          type: string
      required:
        - id
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          examples:
            - Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          type:
            - array
            - "null"
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          examples:
            - https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          examples:
            - 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          examples:
            - Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          examples:
            - https://example.com/errors/example
          format: uri
          type: string
      type: object
    GetInfoTinyURLResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - http://localhost:6500/api/v1/schemas/GetInfoTinyURLResponseBody.json
          format: uri
          readOnly: true
          type: string
        created_at:
          type: string
        id:
          type: string
        original_url:
          type: string
      required:
        - id
        - original_url
        - created_at
      type: object
    HealthCheckResponseBody:
      additionalProperties: false
      properties:
        message:
          type: string
      required:
        - message
      type: object
  securitySchemes:
    bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  contact:
    email: naohito.tanaka0523@gmail.com
    name: naohito-T
    url: https://naohito-t.github.io/
  description: This is a simple URL shortener service.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: TinyURL API
  version: 1.0.0
openapi: 3.1.0
paths:
  /health:
    get:
      description: Check the health of the service.
      operationId: health-check
      parameters:
        - description: Optional DynamoDB check parameter
          explode: false
          in: query
          name: q
          schema:
            description: Optional DynamoDB check parameter
            type: boolean
      responses:
        "200":
          content:
            application/json:
              example: "{message: ok}"
              schema:
                properties:
                  message:
                    type: string
                type: object
          description: Health check successful
        "503":
          content:
            application/problem+json:
              schema:
                properties:
                  detail:
                    type: string
                  status:
                    type: integer
                  title:
                    type: string
                  type:
                    format: uri
                    type: string
                type: object
          description: Service unavailable
      summary: Health Check
      tags:
        - Public
  /urls:
    post:
      description: Create a short URL.
      operationId: create-tinyurl
      parameters:
        - description: ID of the short URL
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTinyURLBodyBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTinyURLResponseBody"
          description: OK
        "201":
          description: Created short URL
          headers:
            Location:
              description: Location of the original URL
              schema:
                format: uri
                type: string
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Failed to create short URL
      summary: Create a short URL
      tags:
        - Public
  /urls/:id:
    get:
      operationId: get-tinyurl-with-redirect
      parameters:
        - description: ID of the short URL
          in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
          headers:
            Location:
              schema:
                type: string
        "301":
          description: Redirect to original URL
          headers:
            Location:
              description: Location of the original URL
              schema:
                format: uri
                type: string
        "404":
          content:
            text/plain:
              schema:
                type: string
          description: Short URL not found
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Failed to Get short URL
      summary: Redirect to original URL
      tags:
        - Public
  /urls/:id/info:
    get:
      description: Get Info tinyurl
      operationId: info-tinyurl
      parameters:
        - description: ID of the short URL
          in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInfoTinyURLResponseBody"
          description: OK
        "404":
          content:
            text/plain:
              schema:
                type: string
          description: Short URL not found
      summary: Get Info tinyurl
      tags:
        - Public
servers:
  - description: Local API Server
    url: http://localhost:6500/api/v1
  - description: Dev API Server
    url: http://localhost:6500/api/v1
  - description: Prod API Server
    url: http://localhost:6500/api/v1

